Grammar

    0 $accept: block $end

    1 block: declarations compound_statement '!'

    2 declarations: DECLARE declare_rest
    3             | /* empty */

    4 declare_rest: identifier type ';' declare_rest
    5             | /* empty */

    6 type: data_type default

    7 default: ':' righthandside
    8        | /* empty */

    9 data_type: characters
   10          | numbers
   11          | BOOLEAN

   12 characters: CHAR
   13           | VARCHAR2 size

   14 size: '(' num ')'

   15 numbers: NUMBER size
   16        | POSITIVE size

   17 compound_statement: BEGIN optional_statements END ';'

   18 optional_statements: NULL ';'
   19                    | statement_list

   20 statement_list: statement
   21               | statement_list statement

   22 statement: lefthandside ';'
   23          | compound_statement
   24          | DBMS_OUTPUT.PUT_LINE '(' identifier ')' ';'
   25          | DBMS_OUTPUT.PUT '(' identifier ')' ';'
   26          | DBMS_OUTPUT.NEW_LINE ';'
   27          | '&' identifier ';'
   28          | IF BEGIN expression THEN statement END IF ';'
   29          | WHILE expression LOOP statement END LOOP ';'

   30 lefthandside: identifier ':' righthandside

   31 righthandside: expression
   32              | 't' 's' 't'
   33              | 't' 'c' 't'
   34              | casting '(' expression ')'

   35 casting: data_type

   36 expression: simple_expression
   37           | simple_expression relop simple_expression

   38 simple_expression: term
   39                  | simple_expression addop term

   40 term: factor
   41     | term mulop factor

   42 factor: 'i'
   43       | 'n'
   44       | TRUE
   45       | FALSE
   46       | NULL
   47       | NOT factor

   48 relop: 'g'
   49      | 'e'
   50      | 'q'
   51      | 'x'
   52      | 'l'
   53      | 'n'

   54 addop: '+'
   55      | '-'

   56 mulop: '*'
   57      | '/'
   58      | '%'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 1
'%' (37) 58
'&' (38) 27
'(' (40) 14 24 25 34
')' (41) 14 24 25 34
'*' (42) 56
'+' (43) 54
'-' (45) 55
'/' (47) 57
':' (58) 7 30
';' (59) 4 17 18 22 24 25 26 27 28 29
'c' (99) 33
'e' (101) 49
'g' (103) 48
'i' (105) 42
'l' (108) 52
'n' (110) 43 53
'q' (113) 50
's' (115) 32
't' (116) 32 33
'x' (120) 51
error (256)
DECLARE (258) 2
BOOLEAN (259) 11
CHAR (260) 12
VARCHAR2 (261) 13
NUMBER (262) 15
POSITIVE (263) 16
BEGIN (264) 17 28
END (265) 17 28 29
NULL (266) 18 46
DBMS_OUTPUT.PUT_LINE (267) 24
DBMS_OUTPUT.PUT (268) 25
DBMS_OUTPUT.NEW_LINE (269) 26
IF (270) 28
THEN (271) 28
WHILE (272) 29
LOOP (273) 29
identifier (274) 4 24 25 27 30
num (275) 14
TRUE (276) 44
FALSE (277) 45
NOT (278) 47


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
block (46)
    on left: 1, on right: 0
declarations (47)
    on left: 2 3, on right: 1
declare_rest (48)
    on left: 4 5, on right: 2 4
type (49)
    on left: 6, on right: 4
default (50)
    on left: 7 8, on right: 6
data_type (51)
    on left: 9 10 11, on right: 6 35
characters (52)
    on left: 12 13, on right: 9
size (53)
    on left: 14, on right: 13 15 16
numbers (54)
    on left: 15 16, on right: 10
compound_statement (55)
    on left: 17, on right: 1 23
optional_statements (56)
    on left: 18 19, on right: 17
statement_list (57)
    on left: 20 21, on right: 19 21
statement (58)
    on left: 22 23 24 25 26 27 28 29, on right: 20 21 28 29
lefthandside (59)
    on left: 30, on right: 22
righthandside (60)
    on left: 31 32 33 34, on right: 7 30
casting (61)
    on left: 35, on right: 34
expression (62)
    on left: 36 37, on right: 28 29 31 34
simple_expression (63)
    on left: 38 39, on right: 36 37 39
term (64)
    on left: 40 41, on right: 38 39 41
factor (65)
    on left: 42 43 44 45 46 47, on right: 40 41 47
relop (66)
    on left: 48 49 50 51 52 53, on right: 37
addop (67)
    on left: 54 55, on right: 39
mulop (68)
    on left: 56 57 58, on right: 41


state 0

    0 $accept: . block $end

    DECLARE  shift, and go to state 1

    $default  reduce using rule 3 (declarations)

    block         go to state 2
    declarations  go to state 3


state 1

    2 declarations: DECLARE . declare_rest

    identifier  shift, and go to state 4

    $default  reduce using rule 5 (declare_rest)

    declare_rest  go to state 5


state 2

    0 $accept: block . $end

    $end  shift, and go to state 6


state 3

    1 block: declarations . compound_statement '!'

    BEGIN  shift, and go to state 7

    compound_statement  go to state 8


state 4

    4 declare_rest: identifier . type ';' declare_rest

    BOOLEAN   shift, and go to state 9
    CHAR      shift, and go to state 10
    VARCHAR2  shift, and go to state 11
    NUMBER    shift, and go to state 12
    POSITIVE  shift, and go to state 13

    type        go to state 14
    data_type   go to state 15
    characters  go to state 16
    numbers     go to state 17


state 5

    2 declarations: DECLARE declare_rest .

    $default  reduce using rule 2 (declarations)


state 6

    0 $accept: block $end .

    $default  accept


state 7

   17 compound_statement: BEGIN . optional_statements END ';'

    BEGIN                 shift, and go to state 7
    NULL                  shift, and go to state 18
    DBMS_OUTPUT.PUT_LINE  shift, and go to state 19
    DBMS_OUTPUT.PUT       shift, and go to state 20
    DBMS_OUTPUT.NEW_LINE  shift, and go to state 21
    IF                    shift, and go to state 22
    WHILE                 shift, and go to state 23
    identifier            shift, and go to state 24
    '&'                   shift, and go to state 25

    compound_statement   go to state 26
    optional_statements  go to state 27
    statement_list       go to state 28
    statement            go to state 29
    lefthandside         go to state 30


state 8

    1 block: declarations compound_statement . '!'

    '!'  shift, and go to state 31


state 9

   11 data_type: BOOLEAN .

    $default  reduce using rule 11 (data_type)


state 10

   12 characters: CHAR .

    $default  reduce using rule 12 (characters)


state 11

   13 characters: VARCHAR2 . size

    '('  shift, and go to state 32

    size  go to state 33


state 12

   15 numbers: NUMBER . size

    '('  shift, and go to state 32

    size  go to state 34


state 13

   16 numbers: POSITIVE . size

    '('  shift, and go to state 32

    size  go to state 35


state 14

    4 declare_rest: identifier type . ';' declare_rest

    ';'  shift, and go to state 36


state 15

    6 type: data_type . default

    ':'  shift, and go to state 37

    $default  reduce using rule 8 (default)

    default  go to state 38


state 16

    9 data_type: characters .

    $default  reduce using rule 9 (data_type)


state 17

   10 data_type: numbers .

    $default  reduce using rule 10 (data_type)


state 18

   18 optional_statements: NULL . ';'

    ';'  shift, and go to state 39


state 19

   24 statement: DBMS_OUTPUT.PUT_LINE . '(' identifier ')' ';'

    '('  shift, and go to state 40


state 20

   25 statement: DBMS_OUTPUT.PUT . '(' identifier ')' ';'

    '('  shift, and go to state 41


state 21

   26 statement: DBMS_OUTPUT.NEW_LINE . ';'

    ';'  shift, and go to state 42


state 22

   28 statement: IF . BEGIN expression THEN statement END IF ';'

    BEGIN  shift, and go to state 43


state 23

   29 statement: WHILE . expression LOOP statement END LOOP ';'

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    expression         go to state 50
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


state 24

   30 lefthandside: identifier . ':' righthandside

    ':'  shift, and go to state 54


state 25

   27 statement: '&' . identifier ';'

    identifier  shift, and go to state 55


state 26

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


state 27

   17 compound_statement: BEGIN optional_statements . END ';'

    END  shift, and go to state 56


state 28

   19 optional_statements: statement_list .
   21 statement_list: statement_list . statement

    BEGIN                 shift, and go to state 7
    DBMS_OUTPUT.PUT_LINE  shift, and go to state 19
    DBMS_OUTPUT.PUT       shift, and go to state 20
    DBMS_OUTPUT.NEW_LINE  shift, and go to state 21
    IF                    shift, and go to state 22
    WHILE                 shift, and go to state 23
    identifier            shift, and go to state 24
    '&'                   shift, and go to state 25

    $default  reduce using rule 19 (optional_statements)

    compound_statement  go to state 26
    statement           go to state 57
    lefthandside        go to state 30


state 29

   20 statement_list: statement .

    $default  reduce using rule 20 (statement_list)


state 30

   22 statement: lefthandside . ';'

    ';'  shift, and go to state 58


state 31

    1 block: declarations compound_statement '!' .

    $default  reduce using rule 1 (block)


state 32

   14 size: '(' . num ')'

    num  shift, and go to state 59


state 33

   13 characters: VARCHAR2 size .

    $default  reduce using rule 13 (characters)


state 34

   15 numbers: NUMBER size .

    $default  reduce using rule 15 (numbers)


state 35

   16 numbers: POSITIVE size .

    $default  reduce using rule 16 (numbers)


state 36

    4 declare_rest: identifier type ';' . declare_rest

    identifier  shift, and go to state 4

    $default  reduce using rule 5 (declare_rest)

    declare_rest  go to state 60


state 37

    7 default: ':' . righthandside

    BOOLEAN   shift, and go to state 9
    CHAR      shift, and go to state 10
    VARCHAR2  shift, and go to state 11
    NUMBER    shift, and go to state 12
    POSITIVE  shift, and go to state 13
    NULL      shift, and go to state 44
    TRUE      shift, and go to state 45
    FALSE     shift, and go to state 46
    NOT       shift, and go to state 47
    't'       shift, and go to state 61
    'i'       shift, and go to state 48
    'n'       shift, and go to state 49

    data_type          go to state 62
    characters         go to state 16
    numbers            go to state 17
    righthandside      go to state 63
    casting            go to state 64
    expression         go to state 65
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


state 38

    6 type: data_type default .

    $default  reduce using rule 6 (type)


state 39

   18 optional_statements: NULL ';' .

    $default  reduce using rule 18 (optional_statements)


state 40

   24 statement: DBMS_OUTPUT.PUT_LINE '(' . identifier ')' ';'

    identifier  shift, and go to state 66


state 41

   25 statement: DBMS_OUTPUT.PUT '(' . identifier ')' ';'

    identifier  shift, and go to state 67


state 42

   26 statement: DBMS_OUTPUT.NEW_LINE ';' .

    $default  reduce using rule 26 (statement)


state 43

   28 statement: IF BEGIN . expression THEN statement END IF ';'

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    expression         go to state 68
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


state 44

   46 factor: NULL .

    $default  reduce using rule 46 (factor)


state 45

   44 factor: TRUE .

    $default  reduce using rule 44 (factor)


state 46

   45 factor: FALSE .

    $default  reduce using rule 45 (factor)


state 47

   47 factor: NOT . factor

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    factor  go to state 69


state 48

   42 factor: 'i' .

    $default  reduce using rule 42 (factor)


state 49

   43 factor: 'n' .

    $default  reduce using rule 43 (factor)


state 50

   29 statement: WHILE expression . LOOP statement END LOOP ';'

    LOOP  shift, and go to state 70


state 51

   36 expression: simple_expression .
   37           | simple_expression . relop simple_expression
   39 simple_expression: simple_expression . addop term

    'n'  shift, and go to state 71
    'g'  shift, and go to state 72
    'e'  shift, and go to state 73
    'q'  shift, and go to state 74
    'x'  shift, and go to state 75
    'l'  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 36 (expression)

    relop  go to state 79
    addop  go to state 80


state 52

   38 simple_expression: term .
   41 term: term . mulop factor

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '%'  shift, and go to state 83

    $default  reduce using rule 38 (simple_expression)

    mulop  go to state 84


state 53

   40 term: factor .

    $default  reduce using rule 40 (term)


state 54

   30 lefthandside: identifier ':' . righthandside

    BOOLEAN   shift, and go to state 9
    CHAR      shift, and go to state 10
    VARCHAR2  shift, and go to state 11
    NUMBER    shift, and go to state 12
    POSITIVE  shift, and go to state 13
    NULL      shift, and go to state 44
    TRUE      shift, and go to state 45
    FALSE     shift, and go to state 46
    NOT       shift, and go to state 47
    't'       shift, and go to state 61
    'i'       shift, and go to state 48
    'n'       shift, and go to state 49

    data_type          go to state 62
    characters         go to state 16
    numbers            go to state 17
    righthandside      go to state 85
    casting            go to state 64
    expression         go to state 65
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


state 55

   27 statement: '&' identifier . ';'

    ';'  shift, and go to state 86


state 56

   17 compound_statement: BEGIN optional_statements END . ';'

    ';'  shift, and go to state 87


state 57

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


state 58

   22 statement: lefthandside ';' .

    $default  reduce using rule 22 (statement)


state 59

   14 size: '(' num . ')'

    ')'  shift, and go to state 88


state 60

    4 declare_rest: identifier type ';' declare_rest .

    $default  reduce using rule 4 (declare_rest)


state 61

   32 righthandside: 't' . 's' 't'
   33              | 't' . 'c' 't'

    's'  shift, and go to state 89
    'c'  shift, and go to state 90


state 62

   35 casting: data_type .

    $default  reduce using rule 35 (casting)


state 63

    7 default: ':' righthandside .

    $default  reduce using rule 7 (default)


state 64

   34 righthandside: casting . '(' expression ')'

    '('  shift, and go to state 91


state 65

   31 righthandside: expression .

    $default  reduce using rule 31 (righthandside)


state 66

   24 statement: DBMS_OUTPUT.PUT_LINE '(' identifier . ')' ';'

    ')'  shift, and go to state 92


state 67

   25 statement: DBMS_OUTPUT.PUT '(' identifier . ')' ';'

    ')'  shift, and go to state 93


state 68

   28 statement: IF BEGIN expression . THEN statement END IF ';'

    THEN  shift, and go to state 94


state 69

   47 factor: NOT factor .

    $default  reduce using rule 47 (factor)


state 70

   29 statement: WHILE expression LOOP . statement END LOOP ';'

    BEGIN                 shift, and go to state 7
    DBMS_OUTPUT.PUT_LINE  shift, and go to state 19
    DBMS_OUTPUT.PUT       shift, and go to state 20
    DBMS_OUTPUT.NEW_LINE  shift, and go to state 21
    IF                    shift, and go to state 22
    WHILE                 shift, and go to state 23
    identifier            shift, and go to state 24
    '&'                   shift, and go to state 25

    compound_statement  go to state 26
    statement           go to state 95
    lefthandside        go to state 30


state 71

   53 relop: 'n' .

    $default  reduce using rule 53 (relop)


state 72

   48 relop: 'g' .

    $default  reduce using rule 48 (relop)


state 73

   49 relop: 'e' .

    $default  reduce using rule 49 (relop)


state 74

   50 relop: 'q' .

    $default  reduce using rule 50 (relop)


state 75

   51 relop: 'x' .

    $default  reduce using rule 51 (relop)


state 76

   52 relop: 'l' .

    $default  reduce using rule 52 (relop)


state 77

   54 addop: '+' .

    $default  reduce using rule 54 (addop)


state 78

   55 addop: '-' .

    $default  reduce using rule 55 (addop)


state 79

   37 expression: simple_expression relop . simple_expression

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    simple_expression  go to state 96
    term               go to state 52
    factor             go to state 53


state 80

   39 simple_expression: simple_expression addop . term

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    term    go to state 97
    factor  go to state 53


state 81

   56 mulop: '*' .

    $default  reduce using rule 56 (mulop)


state 82

   57 mulop: '/' .

    $default  reduce using rule 57 (mulop)


state 83

   58 mulop: '%' .

    $default  reduce using rule 58 (mulop)


state 84

   41 term: term mulop . factor

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    factor  go to state 98


state 85

   30 lefthandside: identifier ':' righthandside .

    $default  reduce using rule 30 (lefthandside)


state 86

   27 statement: '&' identifier ';' .

    $default  reduce using rule 27 (statement)


state 87

   17 compound_statement: BEGIN optional_statements END ';' .

    $default  reduce using rule 17 (compound_statement)


state 88

   14 size: '(' num ')' .

    $default  reduce using rule 14 (size)


state 89

   32 righthandside: 't' 's' . 't'

    't'  shift, and go to state 99


state 90

   33 righthandside: 't' 'c' . 't'

    't'  shift, and go to state 100


state 91

   34 righthandside: casting '(' . expression ')'

    NULL   shift, and go to state 44
    TRUE   shift, and go to state 45
    FALSE  shift, and go to state 46
    NOT    shift, and go to state 47
    'i'    shift, and go to state 48
    'n'    shift, and go to state 49

    expression         go to state 101
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


state 92

   24 statement: DBMS_OUTPUT.PUT_LINE '(' identifier ')' . ';'

    ';'  shift, and go to state 102


state 93

   25 statement: DBMS_OUTPUT.PUT '(' identifier ')' . ';'

    ';'  shift, and go to state 103


state 94

   28 statement: IF BEGIN expression THEN . statement END IF ';'

    BEGIN                 shift, and go to state 7
    DBMS_OUTPUT.PUT_LINE  shift, and go to state 19
    DBMS_OUTPUT.PUT       shift, and go to state 20
    DBMS_OUTPUT.NEW_LINE  shift, and go to state 21
    IF                    shift, and go to state 22
    WHILE                 shift, and go to state 23
    identifier            shift, and go to state 24
    '&'                   shift, and go to state 25

    compound_statement  go to state 26
    statement           go to state 104
    lefthandside        go to state 30


state 95

   29 statement: WHILE expression LOOP statement . END LOOP ';'

    END  shift, and go to state 105


state 96

   37 expression: simple_expression relop simple_expression .
   39 simple_expression: simple_expression . addop term

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 37 (expression)

    addop  go to state 80


state 97

   39 simple_expression: simple_expression addop term .
   41 term: term . mulop factor

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '%'  shift, and go to state 83

    $default  reduce using rule 39 (simple_expression)

    mulop  go to state 84


state 98

   41 term: term mulop factor .

    $default  reduce using rule 41 (term)


state 99

   32 righthandside: 't' 's' 't' .

    $default  reduce using rule 32 (righthandside)


state 100

   33 righthandside: 't' 'c' 't' .

    $default  reduce using rule 33 (righthandside)


state 101

   34 righthandside: casting '(' expression . ')'

    ')'  shift, and go to state 106


state 102

   24 statement: DBMS_OUTPUT.PUT_LINE '(' identifier ')' ';' .

    $default  reduce using rule 24 (statement)


state 103

   25 statement: DBMS_OUTPUT.PUT '(' identifier ')' ';' .

    $default  reduce using rule 25 (statement)


state 104

   28 statement: IF BEGIN expression THEN statement . END IF ';'

    END  shift, and go to state 107


state 105

   29 statement: WHILE expression LOOP statement END . LOOP ';'

    LOOP  shift, and go to state 108


state 106

   34 righthandside: casting '(' expression ')' .

    $default  reduce using rule 34 (righthandside)


state 107

   28 statement: IF BEGIN expression THEN statement END . IF ';'

    IF  shift, and go to state 109


state 108

   29 statement: WHILE expression LOOP statement END LOOP . ';'

    ';'  shift, and go to state 110


state 109

   28 statement: IF BEGIN expression THEN statement END IF . ';'

    ';'  shift, and go to state 111


state 110

   29 statement: WHILE expression LOOP statement END LOOP ';' .

    $default  reduce using rule 29 (statement)


state 111

   28 statement: IF BEGIN expression THEN statement END IF ';' .

    $default  reduce using rule 28 (statement)
